/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main.src.UI.Popups;

import Main.src.Managers.MainManager;

/**
 *
 * @author damia
 */
public class tutorialPopup extends javax.swing.JFrame {

    private String text1 = "Welcome to FossilFriends!\nThis is a pet simulation game developed \nfor my grade 12 IT Practical Assessment Task.\nI will now show you how to play.";
    private String text2 = "Up here is the information header. \nIt will show you the dinosaurs \nname, age, mood, happiness, hunger, thirst, and cleanliness.";
    private String text3 = "The age will increase once per day. \nOvertime your other stats will decrease. \nMood is determined by how often you visit your dinosaur. \nHappiness is determined by the average of all the other stats.";
    private String text4 = "Here’s the settings button if you ever \nneed to open this tutorial again or to change volume.";
    private String text5 = "Here are the minigame buttons: \nhunger, thirst, and cleanliness. \nEach minigame has a cooldown of 60 seconds. \nI will explain each game now.";
    private String text6 = "Hunger: \nYou control your dinosaur and will have to catch falling apples in its mouth.";
    private String text7 = "Thirst: \nYou control a water bottle that periodically drops a water droplet. \nYour dinosaur moves side to side, and you will have to time it correctly.";
    private String text8 = "Clean: \nYou control a sponge, and you must scrub off dirt spots. \n(hint: if you have trouble cleaning a spot, try do smaller scrubs \nthat stay on the dirt spot for longer.)";
    private String text9 = "You can pet your dinosaur to increase \nits mood but be careful as you may overwhelm your dinosaur.";
    private String text10 = "Here’s the home button if you \nwould like to go change your dinosaur.";
    private String text11 = "You may leave the game at any moment, \ndon’t worry your dinosaurs are saved. \nBut be sure to come back, \notherwise your dinosaur might die!";
    private String text12 = "I hope you enjoy :)";

    private int counter = 0;
    private int x, y;

    /**
     * Creates new form tutorialPopup
     */
    public tutorialPopup() {
        initComponents();
    }

    public void initPop(int x, int y) {
        tutText.setText(text1);
        this.x = x;
        this.y = y;
    }

    private void nextText() {
        switch (counter) {
            case 0:
                tutText.setText(text2);
                this.setLocation(x, y-40);
                break;
            case 1:
                tutText.setText(text3);
                break;
            case 2:
                tutText.setText(text4);
                this.setLocation(x+300, y);
                break;
            case 3:
                tutText.setText(text5);
                this.setLocation(x+500, y+200);
                break;
            case 4:
                tutText.setText(text6);
                break;
            case 5:
                tutText.setText(text7);
                break;
            case 6:
                tutText.setText(text8);
                break;
            case 7:
                tutText.setText(text9);
                this.setLocation(x, y+300);
                break;
            case 8:
                tutText.setText(text10);
                this.setLocation(x, y+450);
                break;
            case 9:
                tutText.setText(text11);
                this.setLocation(x, y);
                break;
            case 10:
                tutText.setText(text12);
                break;
            case 11:
                MainManager.setSettings(MainManager.getVol(), true);
                this.dispose();
                break;
            default:
                break;
        }
        
        counter++;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        nextButton = new javax.swing.JButton();
        tutText = new java.awt.TextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(217, 203, 179));
        jPanel1.setForeground(new java.awt.Color(217, 203, 179));
        jPanel1.setMaximumSize(new java.awt.Dimension(500, 400));

        nextButton.setBackground(new java.awt.Color(249, 245, 227));
        nextButton.setForeground(new java.awt.Color(74, 95, 51));
        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        tutText.setBackground(new java.awt.Color(249, 245, 227));
        tutText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tutText.setEditable(false);
        tutText.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        tutText.setForeground(new java.awt.Color(74, 95, 51));
        tutText.setMaximumSize(new java.awt.Dimension(200, 160));
        tutText.setMinimumSize(new java.awt.Dimension(1, 1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nextButton)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(tutText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(tutText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nextButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        // TODO add your handling code here:
        nextText();
    }//GEN-LAST:event_nextButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tutorialPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tutorialPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tutorialPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tutorialPopup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tutorialPopup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton nextButton;
    private java.awt.TextArea tutText;
    // End of variables declaration//GEN-END:variables
}
